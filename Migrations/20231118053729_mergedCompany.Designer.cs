// <auto-generated />
using System;
using HackathonApi.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HackathonApi.Migrations
{
    [DbContext(typeof(HackathonDbContext))]
    [Migration("20231118053729_mergedCompany")]
    partial class mergedCompany
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("HackathonApi.Entities.Internship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyKrsNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyNipNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyPhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyRegonNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyRepresentativeFirstname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyRepresentativeSurname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfStart")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ManagerEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentEmail")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Internships");
                });

            modelBuilder.Entity("HackathonApi.Entities.NewDateTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfStart")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IntershipId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StudentEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IntershipId");

                    b.ToTable("NewDateTickets");
                });

            modelBuilder.Entity("HackathonApi.Entities.NewDateTicket", b =>
                {
                    b.HasOne("HackathonApi.Entities.Internship", "Intership")
                        .WithMany()
                        .HasForeignKey("IntershipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intership");
                });
#pragma warning restore 612, 618
        }
    }
}
